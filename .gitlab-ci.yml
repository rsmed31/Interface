stages:
  - test
  - coverage
  - lint
  - static-analysis
  - build

variables:
  COVERAGE_OPTIONS: "--cov-config=.coveragerc --cov=src src/tests/ --cov-report=xml --cov-report=term-missing"
  BANDIT_OPTIONS: "-r src/ -c .bandit.yml --exclude src/tests,src/core/config.py"
  CI_REGISTRY_IMAGE: devops.telecomste.fr:5050/printerfaceadmin/2024-25/group1/printerface
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

default:
  image: devops.telecomste.fr:5050/printerfaceadmin/2024-25/group1/printerface/cicontainer:test

# Test Stage
test:
  stage: test
  script:
    - pytest $COVERAGE_OPTIONS
  artifacts:
    paths:
      - coverage.xml  # Pass coverage data to the next stage
    expire_in: 1 week

# Coverage Stage
coverage:
  stage: coverage
  script:
    - pytest $COVERAGE_OPTIONS
    - coverage html  # Generate an HTML report for better visualization
  artifacts:
    paths:
      - htmlcov/      # Store the HTML coverage report directory
    expire_in: 1 week
  needs:
    - test

# Linting Stage
lint:
  stage: lint
  script:
    - pylint src/

# Static Analysis Stage
static-analysis:
  stage: static-analysis
  script:
    - bandit $BANDIT_OPTIONS

# Build Stage
build:
  image: docker:19.03.12
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  only:
    - main
